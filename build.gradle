plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

ext {
    springBootAdminVersion = "3.4.5"
}

group = 'com.sprint.mission'
version = '1.2-M8'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // spring boot admin (client)
    implementation 'de.codecentric:spring-boot-admin-starter-client'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // AWS S3
    implementation 'software.amazon.awssdk:s3:2.25.27'
    testImplementation 'software.amazon.awssdk:s3:2.25.27'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // postgreSQL
    runtimeOnly 'org.postgresql:postgresql'
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:$springBootAdminVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "${project.name}-${project.version}.jar"
}